#!/usr/bin/env bash

set -euo pipefail

command=${1:-}
args=${@:2}

export SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  HARPOON_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ ${SOURCE} != /* ]] && SOURCE="$HARPOON_ROOT/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

# roots
export HARPOON_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
export SERVICES_ROOT=${HARPOON_ROOT}/services

export ROOT_TASKS_FILE="${HARPOON_ROOT}/harpoon"

# variables
source ${HARPOON_ROOT}/core/vars/env.sh
source ${HARPOON_ROOT}/core/vars/docker.sh
source ${HARPOON_ROOT}/core/vars/traefik.sh

print_help() {
	help=$(grep -E '^\t[a-zA-Z:|_-]+\)\s##\s.*$' ${1} | sort | awk 'BEGIN {FS = "\\).*?## |%%"}; {c=$1" "$2; printf "\033[36m%-34s\033[0m %s\n", c, $3}')
	echo -e "$help"
}

source ${HARPOON_ROOT}/services/services.sh

traefik_storeconfig() {
	if [ ! -f core/traefik/acme/acme.json ]; then
		echo "{ }" > core/traefik/acme/acme.json
	fi
	chmod 600 core/traefik/acme/acme.json
	${HARPOON_DOCKER_COMPOSE} run --rm traefik storeconfig
}

export HTTPIE="docker run --rm -i -v ${PWD}:${PWD} -w ${PWD} --net=${HARPOON_DOCKER_NETWORK} -e 'TERM=xterm' alpine/httpie"

case "${command:-}" in
	docker) ## <arg>...	%% üê≥  Run docker in the Harpoon environment
		docker ${args} ;;

	docker-compose|dc) ## <arg>... %% üê≥  Run docker-compose in the Harpoon environment
		${HARPOON_DOCKER_COMPOSE} ${args} ;;

	env) ## %% Show environment variables
		if [ ${PAGER:-} ]; then
			env | ${PAGER}
		else
			env
		fi
		;;

	http) ## <arg...> %% üåé  HTTPie
		${HTTPIE} ${args} ;;

	show-nameserver-ip)
		echo ${NAMESERVER_IP} ;;

	install) ## %% ‚ñ∂Ô∏è  Install Harpoon
		echo -e "$(cat ${HARPOON_ROOT}/core/dnsmasq/dnsmasq.conf.template | sed "s/NAMESERVER_IP/${NAMESERVER_IP}/")" > ${HARPOON_ROOT}/core/dnsmasq/dnsmasq.conf

		sudo mkdir -p /etc/resolver
		echo "nameserver ${NAMESERVER_IP}" | sudo tee /etc/resolver/harpoon.dev
		echo "nameserver ${NAMESERVER_IP}" | sudo tee /etc/resolver/consul
		echo "port 8600" | sudo tee -a /etc/resolver/consul

		if [ ${CUSTOM_DOMAINS:-} ]; then
			for i in "${CUSTOM_DOMAINS[@]}"; do
				echo -e "\naddress=/${i}/${NAMESERVER_IP}" >> ${HARPOON_ROOT}/core/dnsmasq/dnsmasq.conf
				echo "nameserver ${NAMESERVER_IP}" | sudo tee /etc/resolver/${i}
			done
		fi

		docker network create ${HARPOON_DOCKER_NETWORK} --subnet 10.254.254.0/24 || true
		${HARPOON_DOCKER_COMPOSE} pull
		${HARPOON_DOCKER_COMPOSE} up -d cadvisor dnsmasq consul
#		sleep 10
#		traefik_storeconfig
		${HARPOON_DOCKER_COMPOSE} up -d traefik

		# Add fixed loopback alias for container connectivity to services running locally (when running Docker for Mac)
		uname | grep Darwin && sudo ifconfig lo0 alias 10.254.253.1/32 || true

		#sudo ifconfig lo:0 10.254.253.1/32
		;;

	stop) ## %% Stop Harpoon Core Services
		${HARPOON_DOCKER_COMPOSE} stop ;;

	off) ## %% Stop and remove Harpoon Core Services containers
		${HARPOON_DOCKER_COMPOSE} stop
		${HARPOON_DOCKER_COMPOSE} rm -f -v
		;;

	restart) ## %% üîÑ  Restart Harpoon Core Services
		${HARPOON_DOCKER_COMPOSE} stop
		${HARPOON_DOCKER_COMPOSE} rm -f -v
		${HARPOON_DOCKER_COMPOSE} up -d
		;;

	status) ## %% Display the status of Harpoon Core Services
		${HARPOON_DOCKER_COMPOSE} ps
		;;

	clean) ## %% üóë  Uninstall Harpoon
		${HARPOON_DOCKER_COMPOSE} down --rmi all -v
		docker network rm ${HARPOON_DOCKER_NETWORK} || true

		if [ ${CUSTOM_DOMAINS:-} ]; then
			for i in  "${CUSTOM_DOMAINS[@]}"; do
				sudo rm -f /etc/resolver/${i}
			done
		fi

		sudo rm -f /etc/resolver/harpoon.dev
		sudo rm -f /etc/resolver/consul

		rm -f ${HARPOON_ROOT}/core/dnsmasq/dnsmasq.conf
		;;

	#traefik:storeconfig) ## %% Upload the Traefik configuration to Consul
	#	traefik_storeconfig ;;

	services:list) ## %% List services available in Harpoon
		services ;;

	services:status) ## %% Display the status for all supporting services
		services_status ;;

	*:*)
		SERVICE_NAME=${command%:*}
		handle_service ${SERVICE_NAME} ${command}
		;;

	help|*) ## Get help
		echo "Usage: harpoon command [<arg>...]"
		echo ""
		print_help ${ROOT_TASKS_FILE}
		printf "\t\033[36m%-34s\033[0m %s\n" "(service):help" "Get help for a particular service"
		echo ""
		exit 1
esac